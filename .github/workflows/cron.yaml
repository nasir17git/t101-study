name: daily_check

on:
  # push:
  #   branches:
  #     - main
  schedule:
    - cron: "0 0 * * 1-5" # 한국시간 월-금 오전 9시 실행 > 깃헙액션 이슈로 실제 실행은 1시간정도 딜레이
  workflow_dispatch:

jobs:
  workspace1_ext:
    name: "ext plan"
    runs-on: ubuntu-latest
    outputs:
      result: "false"
      url: "https://google.com"
      # result: ${{ steps.ext-run.outputs.has-changes }}
      # url: ${{ steps.ext-run.outputs.run-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - uses: kvrhdn/tfe-run@v1
      #   id: ext-run
      #   with:
      #     token: ${{ secrets.TFE_TOKEN }}
      #     organization: org-test-221226
      #     workspace: trf_cloud
      #     type: plan
      #     wait-for-completion: true
      #     message: |
      #       Run triggered using tfe-run (commit: ${{ github.SHA }})

      # - name: result check
      #   run: echo "${{ steps.ext-run.outputs.has-changes }}"

  workspace2_lds:
    name: "lds plan"
    runs-on: ubuntu-latest
    outputs:
      result: "false"
      url: "https://google.com"
      # result: ${{ steps.lds-run.outputs.has-changes }}
      # url: ${{ steps.lds-run.outputs.run-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - uses: kvrhdn/tfe-run@v1
      #   id: lds-run
      #   with:
      #     token: ${{ secrets.TFE_TOKEN }}
      #     organization: org-test-221226
      #     workspace: add_ec2
      #     type: plan
      #     wait-for-completion: true
      #     message: |
      #       Run triggered using tfe-run (commit: ${{ github.SHA }})
      
      # - name: result check
      #   run: echo "${{ steps.lds-run.outputs.has-changes }}"

  workspace3_qa:
    name: "qa plan"
    runs-on: ubuntu-latest
    outputs:
      result: "false"
      url: "https://google.com"
      # result: ${{ steps.qa-run.outputs.has-changes }}
      # url: ${{ steps.qa-run.outputs.run-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - uses: kvrhdn/tfe-run@v1
      #   id: qa-run
      #   with:
      #     token: ${{ secrets.TFE_TOKEN }}
      #     organization: org-test-221226
      #     workspace: error
      #     type: plan
      #     wait-for-completion: true
      #     message: |
      #       Run triggered using tfe-run (commit: ${{ github.SHA }})

      # - name: result check
      #   run: echo "${{ steps.qa-run.outputs.has-changes }}"

  slack_alert:
    name: slack_alert
    runs-on: ubuntu-latest
    needs: [workspace1_ext, workspace2_lds, workspace3_qa]
    steps: 
      - name: get current date
        id: date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Check for changes
        id: check
        run: |
          echo "SAME=1"
          for i in {{ needs.*.outputs.result }}
          do
            echo ${i}
          done
          echo $SAME

          if [[ SAME -eq 1 ]]; then
            echo "All environment variables have the same value."
            echo "STATUS=#008000" >> $GITHUB_ENV
          else
            echo "Not all environment variables have the same value."
            echo "STATUS=#FF0000" >> $GITHUB_ENV
          fi

          if [[ "${{ needs.workspace1_ext.outputs.result }}" == "false" ]]; then
            echo "ext_STATUS=:white_check_mark: Good" >> $GITHUB_ENV
          else
            echo "ext_STATUS=:icon_error: Bad" >> $GITHUB_ENV
          fi

          if [[ "${{ needs.workspace2_lds.outputs.result }}" == "false" ]]; then
            echo "lds_STATUS=:white_check_mark: Good" >> $GITHUB_ENV
          else
            echo "lds_STATUS=:icon_error: Bad" >> $GITHUB_ENV
          fi

          if [[ "${{ needs.workspace3_qa.outputs.result }}" == "false" ]]; then
            echo "qa_STATUS=:white_check_mark: Good" >> $GITHUB_ENV
          else
            echo "qa_STATUS=:icon_error: Bad" >> $GITHUB_ENV
          fi

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "${{ env.DATE }} Terraform Health Check"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "plain_text",
                    "text": "주중 오전9시에 plan하여 실제 AWS환경과 terraform 구성파일간의 차이 여부를 알려줍니다."
                  }
                },
                {
                  "type": "divider"
                }
              ],
              "attachments": [
                {
                  "color": "${{ env.STATUS }}",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*ext status?*\n${{ env.ext_STATUS }}"
                      },
                      "accessory": {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "View"
                        },
                        "url": "${{ needs.workspace1_ext.outputs.url }}"
                      }
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*lds status?*\n${{ env.lds_STATUS }}"
                      },
                      "accessory": {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "View"
                        },
                        "url": "${{ needs.workspace2_lds.outputs.url }}"
                      }
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*qa status?*\n${{ env.qa_STATUS }}"
                      },
                      "accessory": {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "View"
                        },
                        "url": "${{ needs.workspace3_qa.outputs.url }}"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK